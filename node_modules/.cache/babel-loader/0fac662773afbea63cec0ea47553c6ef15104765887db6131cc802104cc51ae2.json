{"ast":null,"code":"var _jsxFileName = \"/Users/davidparker/Documents/bootcamp/Challenges/portfolio_multi_page/src/App.js\",\n  _s = $RefreshSig$();\nimport './reset.css';\nimport './App.css';\nimport AboutMe from './pages/AboutMe';\nimport Navbar from './components/navbar';\nimport Header from './components/header';\nimport Contact from './pages/contact';\nimport Footer from './components/footer';\nimport Work from \"./pages/work\";\nimport { useState } from 'react';\n// import { Routes, Route } from 'react-router-dom';\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioContainer() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('about');\n  console.log(\"currently on \", currentPage);\n  // checking to see what the value of 1currentPage` is. Depending on the value of currentPage, we return the corresponding component to render\n  const renderPage = () => {\n    console.log(\"here1\");\n    if (currentPage === \"about\") {\n      console.log(\"AboutMe\");\n      return /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === \"contact\") {\n      // console.log(\"contact\");\n      return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === \"work\") {\n      // console.log(\"work\");\n      return /*#__PURE__*/_jsxDEV(Work, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    }\n    // return <aboutMe />;\n  };\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    renderPage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n// function App() {\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<Header />} />\n//       <Route path=\"/about\" element={<Aboutme />} />\n//       <Route path=\"/contact\" element={<Contact />} />\n//       <Route path=\"/work\" element={<Work  />} />\n//       {/* <Route path='/resume' element={<Resume />}/> */}\n//       <Route path=\"/PORTFOLIO\" element={<Navigate replace to=\"/\" />} />\n//     </Routes>\n//   );\n// }\n\n// function App() {\n//   const pages = [{ name: \"About Me\" }, { name: \"Contact\" }, { name: \"Work\" }];\n//    const [currentpage, setCurrentPage] = useState (pages[0])\n//   return (\n//     <div>\n//       <Header pages={pages} currentpage={currentpage} setCurrentPage={setCurrentPage}/>\n//       {/* <Aboutme />\n//       <Contact />\n//       <Work /> */}\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default App;\n_s(PortfolioContainer, \"6ELXi4ifLyIfVEx7kMeVzfjWr0s=\");\n_c = PortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"names":["AboutMe","Navbar","Header","Contact","Footer","Work","useState","Routes","Route","Navigate","PortfolioContainer","currentPage","setCurrentPage","console","log","renderPage","handlePageChange","page"],"sources":["/Users/davidparker/Documents/bootcamp/Challenges/portfolio_multi_page/src/App.js"],"sourcesContent":["import './reset.css';\nimport './App.css';\nimport AboutMe from './pages/AboutMe';\nimport Navbar from './components/navbar';\nimport Header from './components/header';\nimport Contact from './pages/contact';\nimport Footer from './components/footer';\nimport Work from \"./pages/work\";\nimport { useState } from 'react';\n// import { Routes, Route } from 'react-router-dom';\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\n\n\n\nexport default function PortfolioContainer() {\n  const [currentPage, setCurrentPage] = useState('about');\n  console.log(\"currently on \" , currentPage)\n  // checking to see what the value of 1currentPage` is. Depending on the value of currentPage, we return the corresponding component to render\n  const renderPage = () => {\n    console.log(\"here1\");\n    if (currentPage === \"about\") {\n      console.log(\"AboutMe\");\n      return <AboutMe />;\n    }\n    if (currentPage === \"contact\") {\n      // console.log(\"contact\");\n      return <Contact />;\n    }\n    if (currentPage === \"work\") {\n      // console.log(\"work\");\n      return <Work />;\n    }\n    // return <aboutMe />;\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page)\n    renderPage()\n  \n  };\n\n  return (\n    <div>\n      {/* passing the currentPage from state and the function to update it */}\n      <Navbar currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* calling the renderPage method which will return a component */}\n      {renderPage()}\n    </div>\n  );\n}\n\n\n// function App() {\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<Header />} />\n//       <Route path=\"/about\" element={<Aboutme />} />\n//       <Route path=\"/contact\" element={<Contact />} />\n//       <Route path=\"/work\" element={<Work  />} />\n//       {/* <Route path='/resume' element={<Resume />}/> */}\n//       <Route path=\"/PORTFOLIO\" element={<Navigate replace to=\"/\" />} />\n//     </Routes>\n//   );\n// }\n\n// function App() {\n//   const pages = [{ name: \"About Me\" }, { name: \"Contact\" }, { name: \"Work\" }];\n//    const [currentpage, setCurrentPage] = useState (pages[0])\n//   return (\n//     <div>\n//       <Header pages={pages} currentpage={currentpage} setCurrentPage={setCurrentPage}/>\n//       {/* <Aboutme />\n//       <Contact />\n//       <Work /> */}\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAK3D,eAAe,SAASC,kBAAkB,GAAG;EAAA;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EACvDO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAGH,WAAW,CAAC;EAC1C;EACA,MAAMI,UAAU,GAAG,MAAM;IACvBF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAIH,WAAW,KAAK,OAAO,EAAE;MAC3BE,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,oBAAO,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IACpB;IACA,IAAIH,WAAW,KAAK,SAAS,EAAE;MAC7B;MACA,oBAAO,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IACpB;IACA,IAAIA,WAAW,KAAK,MAAM,EAAE;MAC1B;MACA,oBAAO,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IACjB;IACA;EACF,CAAC;;EAED,MAAMK,gBAAgB,GAAIC,IAAI,IAAK;IACjCL,cAAc,CAACK,IAAI,CAAC;IACpBF,UAAU,EAAE;EAEd,CAAC;EAED,oBACE;IAAA,wBAEE,QAAC,MAAM;MAAC,WAAW,EAAEJ,WAAY;MAAC,gBAAgB,EAAEK;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,EAEvED,UAAU,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,GAlEwBL,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}